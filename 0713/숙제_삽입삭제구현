#include <stdio.h>
#include <stdlib.h>

typedef struct list {
	int data;
	struct list* link;
}node;

node* head;
node* tail;
node* inithead();
void addnode(int val);
void insert(int val, int position);
void delnode(int position);
void show();


int main() {
	head = inithead();
	addnode(10);
	addnode(20);
	addnode(30);
	addnode(40);
	addnode(50);
	insert(15, 3);
	show();
	printf("\n");
	delnode(3);
	show();

	return 0;
}

node* inithead() {
	node* tmp = (node*)malloc(sizeof(node));
	tmp->data = 0;
	tmp->link = NULL;
	return tmp;
}
void addnode(int val) {
	node* newnode = (node*)malloc(sizeof(node));
	node* now = head;
	while (now->link != NULL) {
		now = now->link;
	}
	now->link = newnode;
	newnode->link = NULL;
	newnode->data = val;
	tail = newnode;
}
void insert(int val, int position) {
	node* newnode = (node*)malloc(sizeof(node));
	node*now = head;
	int i = 1;
	while (i < position-1) {
		now = now->link;
		i++;
	}
	newnode->link = now->link;
	now->link = newnode;
	newnode->data = val;

}
void delnode(int position) {
	int i = 1;
	node *now = NULL;
	node* del = head;
	while (i < position) {
		if (i == position - 1)
			now = del;
		del = del->link;
		i++;
	}
	now->link = del->link;
	free(del);
}
void show() {
	node* view = head->link;
	while (view != NULL) {
		printf("%d\n", view->data);
		view = view->link;
	}
}
