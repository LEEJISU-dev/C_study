#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <Windows.h>
#include <string.h>

typedef struct healthclub {
	char name[30];
	char job[50];
	char heathexp[5];
	char personaltrain[10];
	char payway[20];
	char sex[5];
	int phone;
	int startdate;
	int period;
	int enddate;
	int price;

	struct healthclub* prelink;
	struct healthclub* link;
}health;
health* head = NULL;
health* tail = NULL;
health* inithead();
void Regi();
void AutoRegi();
void showlist();
void findmember(char* name);
void showone(health* find);
void conditionshow(int condition);
int calcenddate(int start, int month);
int main()
{
	char find[30];
	BOOL s;
	int num;
	int sel;
	int conditionsel;

	head = inithead();
	do {
		printf("Menu : 1. 회원등록 2. 회원보기 3. 회원찾기 4. 조건검색 0.종료 => ");
		scanf("%d", &sel);
		switch (sel) {
		case 1:
			AutoRegi();
			break;
		case 2:
			showlist();
			break;
		case 3:
                        printf("이름 : ");
			scanf("%s", find);
			findmember(find);
			break;
		case 4:
			printf("Menu : 1. 성 2. 성별 3. 개인 트레이닝 4. 등록 개월 => ");
			scanf("%d", &conditionsel);
			conditionshow(conditionsel);
			break;
		}
	} while (sel != 0);

	return 0;
}

health* inithead()
{
	health* tmp = (health*)malloc(sizeof(health));
	tmp->link = NULL;
	tmp->prelink = NULL;
	return tmp;
}
void Regi()
{
	health* newnode = (health*)malloc(sizeof(health));
	health* now = head;
	while (now->link != NULL) now = now->link;
	printf("이름 : ");
	scanf("%s", newnode->name);
	printf("성별 : ");
	scanf("%s", newnode->sex);
	printf("전화번호 : ");
	scanf("%d", &newnode->phone);
	printf("직업 : ");
	scanf("%s", newnode->job);
	printf("운동기구 사용능력 : ");
	scanf("%s", newnode->heathexp);
	printf("등록일 : ");
	scanf("%d", &newnode->startdate);
	printf("등록개월 : ");
	scanf("%d", &newnode->period);
	newnode->enddate = calcenddate(newnode->startdate,newnode->period);
	printf("개인 트레이닝 여부 : ");
	scanf("%s", newnode->personaltrain);
	printf("등록 방법 및 금액 : ");
	scanf("%s %d", newnode->payway, &newnode->price);
	newnode->link = now->link;
	now->link = newnode;
	newnode->prelink = now;
}
void AutoRegi()
{
	health* newnode = (health*)malloc(sizeof(health));
	health* now = head;
	health* search = NULL;
	printf("이름 : ");
	scanf("%s", newnode->name);
	printf("성별 : ");
	scanf("%s", newnode->sex);
	printf("전화번호 : ");
	scanf("%d", &newnode->phone);
	printf("직업 : ");
	scanf("%s", newnode->job);
	printf("운동기구 사용능력 : ");
	scanf("%s", newnode->heathexp);
	printf("등록일 : ");
	scanf("%d", &newnode->startdate);
	printf("등록개월 : ");
	scanf("%d", &newnode->period);
	newnode->enddate = calcenddate(newnode->startdate, newnode->period);
	printf("개인 트레이닝 여부 : ");
	scanf("%s", newnode->personaltrain);
	printf("등록 방법 및 금액 : ");
	scanf("%s %d", newnode->payway, &newnode->price);
	if (head->link == NULL) {
		newnode->link = now->link;
		now->link = newnode;
		newnode->prelink = now;
		tail = newnode;
	}
	else {
		search = head->link;
		while (search != NULL) {
			if (strcmp(newnode->name, search->name) == -1) {
				break;
			}
			search = search->link;
		}
		if (search == NULL) {
			search = tail;
			search->link = newnode;
			newnode->prelink = search;
			newnode->link = NULL;
			tail = newnode;
		}
		else {
			now = search->prelink;
			now->link = newnode;
			newnode->prelink = now;
			newnode->link = search;
			search->prelink = newnode;
		}
	}
}
void showlist() {
	health* view = head->link;
	while (view != NULL) {
		printf("이름 : %s 성별 : %s 직업 : %s\n", view->name, view->sex, view->job);
		printf("전화번호 : %011d 개인 트레이닝 여부 : %s\n", view->phone, view->personaltrain);
		printf("등록일 : %06d 마지막일자 : %06d 등록개월 : %d\n", view->startdate, view->enddate, view->period);
		printf("등록 방법 : %s 등록 금액 : %d원\n", view->payway, view->price);
		view = view->link;
	}
	printf("\n");
}
void findmember(char* name)
{
	health* find = head->link;
	while (find != NULL) {
		if (strcmp(find->name, name) == 0) {
			showone(find);
			break;
		}
		find = find->link;
	}
}
void showone(health* find)
{
	printf("이름 : %s 성별 : %s 직업 : %s\n", find->name, find->sex, find->job);
	printf("전화번호 : %011d 개인 트레이닝 여부 : %s\n", find->phone, find->personaltrain);
	printf("등록일 : %06d 마지막일자 : %06d 등록개월 : %d\n", find->startdate, find->enddate, find->period);
	printf("등록 방법 : %s 등록 금액 : %d원\n", find->payway, find->price);
}
void conditionshow(int condition)
{
	health* conditionview = head->link;
	char str[5];
	int month;
	switch (condition) {
	case 1:
		printf("성을 입력하세요 ");
		scanf("%s", str);
		while (conditionview != NULL) {
			if (strncmp(str, conditionview->name, 2) == 0) {
				showone(conditionview);
			}
			conditionview = conditionview->link;
		}
		break;
	case 2:
		printf("성별을 입력하세요 ");
		scanf("%s", str);
		while (conditionview != NULL) {
			if (strcmp(str, conditionview->sex) == 0) {
				showone(conditionview);
			}
			conditionview = conditionview->link;
		}
		break;
	case 3:
		printf("트레이닝 유무를 입력 ");
		scanf("%s", str);
		while (conditionview != NULL) {
			if (strcmp(str, conditionview->personaltrain) == 0) {
				showone(conditionview);
			}
			conditionview = conditionview->link;
		}
		break;
	case 4:
		printf("개월 수를 입력하세요 ");
		scanf("%d", &month);
		while (conditionview != NULL) {
			if (month == conditionview->period) {
				showone(conditionview);
			}
			conditionview = conditionview->link;
		}
		break;
	}
}
int calcenddate(int start, int mon)
{
	int year;
	int month;
	int day;
	year = start / 10000;
	month = (start - year * 10000) / 100;
	day = start % 100;
	//printf("y : %d m : %d d : %d", year, month, day);
	if (day == 1) {
		if (month +mon== 13) {
			month = 12;
		}else if (month + mon > 13) {
			month = month + mon - 13;
			year += 1;
		}
		else month = month + mon - 1;
		switch (month) {
		case 1:
		case 3:
		case 5:
		case 7:
		case 8:
		case 10:
		case 12:
			day = 31;
			break;
		case 2:
			day = 28;
			break;
		case 4:
		case 6:
		case 9:
		case 11:
			day = 30;
			break;
		}
	}
	else if ((month + mon == 2 || month+mon ==14) && day >28) {
		day = 28;
		if (month + mon == 14) {
			year += 1;
		}
		month = 2;
	}
	else {
		if (month + mon > 12) {
			month = month + mon;
			year += 1;
		}
		else month = month + mon;
		day = day - 1;
	}
	return (year * 10000 + month * 100 + day);
}
